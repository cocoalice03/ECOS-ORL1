rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // User profile images - users can upload their own
    match /users/{userId}/profile/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isOwner(userId);
    }

    // Scenario resources (images, PDFs) - read by all authenticated, write by admins
    match /scenarios/{scenarioId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() &&
                      request.auth.token.email.matches('.*@admin\\.com$');
    }

    // Session recordings or attachments - users can access their own
    match /sessions/{sessionId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Default deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
